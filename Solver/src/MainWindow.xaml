<Window x:Class="Solver.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Solver"
        xmlns:converters="clr-namespace:Solver.Converters"
        mc:Ignorable="d"
        Title="Word Finder" Height="700" Width="1000" MinWidth="800" MinHeight="600"
        Loaded="Window_Loaded" SizeChanged="Window_SizeChanged"
        Background="{DynamicResource WindowBackgroundColor}">

    <Window.Resources>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
    </Window.Resources>

    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Top Controls: Settings, Debug, Clear, Solve -->
        <Grid Grid.Row="0" Margin="0,0,0,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/> <!-- Left-aligned buttons -->
                <ColumnDefinition Width="Auto"/> <!-- Right-aligned settings button -->
            </Grid.ColumnDefinitions>

            <StackPanel Orientation="Horizontal">
                <Button x:Name="DebugButton" Content="Populate Test Board" Margin="0,0,5,0" Padding="10,5" Click="DebugPopulateButton_Click" Background="{DynamicResource ButtonBackgroundColor}" Foreground="{DynamicResource ButtonForegroundColor}"/>
                <Button x:Name="ClearButton" Content="Clear" Margin="0,0,5,0" Padding="10,5" Click="ClearButton_Click" Background="{DynamicResource ButtonBackgroundColor}" Foreground="{DynamicResource ButtonForegroundColor}"/>
                <Button x:Name="SolveButton" Content="Solve" Padding="10,5" Click="SolveButton_Click" FontWeight="Bold" Background="{DynamicResource AccentButtonBackgroundColor}" Foreground="{DynamicResource AccentButtonForegroundColor}"/>
            </StackPanel>

            <Button Grid.Column="1" x:Name="SettingsButton" Content="⚙" Margin="5,0,0,0" Padding="8,5" Click="SettingsButton_Click" 
                    Background="{DynamicResource ButtonBackgroundColor}" Foreground="{DynamicResource ButtonForegroundColor}"
                    FontFamily="Segoe UI Symbol" FontSize="16" FontWeight="Bold" ToolTip="Settings"/>
        </Grid>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/> <!-- Board -->
                <ColumnDefinition Width="5"/>    <!-- Spacer -->
                <ColumnDefinition Width="*"/>   <!-- Solution List -->
                <ColumnDefinition Width="5"/>    <!-- Spacer -->
                <ColumnDefinition Width="2*"/>  <!-- Include/Exclude Lists -->
            </Grid.ColumnDefinitions>

            <!-- Board Grid and Path Overlay -->
            <Viewbox Grid.Column="0" Stretch="Uniform" MaxWidth="400" MaxHeight="550">
                <Grid>
                    <UniformGrid x:Name="BoardGrid" Rows="8" Columns="6" Background="{DynamicResource ControlBackgroundColor}">
                        <!-- TextBoxes are added in code-behind.
                             Their Background, Foreground, and BorderBrush are now set using DynamicResource
                             references in InitializeBoard and SetBoardEnabled methods. -->
                    </UniformGrid>
                    <Canvas x:Name="PathOverlay" Background="Transparent" IsHitTestVisible="False"/>
                </Grid>
            </Viewbox>
            
            <!-- Solution Words ListBox -->
            <DockPanel Grid.Column="2">
                <TextBlock DockPanel.Dock="Top" Text="Found Words:" FontWeight="SemiBold" Margin="0,0,0,5" Foreground="{DynamicResource TextForegroundColor}"/>
                <ListBox x:Name="SolutionWordsListBox" MouseDoubleClick="SolutionWordsListBox_MouseDoubleClick"
                         Background="{DynamicResource ControlBackgroundColor}" Foreground="{DynamicResource TextForegroundColor}" BorderBrush="{DynamicResource BorderColorBrush}">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Padding" Value="5,3"/>
                            <EventSetter Event="MouseEnter" Handler="SolutionWordItem_MouseEnter"/>
                            <EventSetter Event="MouseLeave" Handler="SolutionWordItem_MouseLeave"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <Border x:Name="Bd" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,1">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="{Binding Word}" VerticalAlignment="Center" Foreground="{DynamicResource TextForegroundColor}"/>
                                                <Button Grid.Column="1" Content="✔️" Margin="2,0,1,0" Padding="3" FontSize="12" ToolTip="Add to Included" 
                                                        CommandParameter="{Binding}" Click="SolutionIncludeButton_Click"
                                                        IsEnabled="{Binding IsUserIncluded, Converter={StaticResource InverseBooleanConverter}}">
                                                    <Button.Style>
                                                        <Style TargetType="Button">
                                                            <Setter Property="Background" Value="{DynamicResource IncludeButtonBackgroundColor}"/>
                                                            <Setter Property="Foreground" Value="{DynamicResource IncludeButtonForegroundColor}"/>
                                                            <Style.Triggers>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Background" Value="{DynamicResource IncludeButtonDisabledBackgroundColor}"/>
                                                                    <Setter Property="Foreground" Value="{DynamicResource IncludeButtonDisabledForegroundColor}"/>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                </Button>
                                                <Button Grid.Column="2" Content="❌" Margin="1,0,2,0" Padding="3" FontSize="11" ToolTip="Add to Excluded" 
                                                        CommandParameter="{Binding}" Click="SolutionExcludeButton_Click"
                                                        IsEnabled="{Binding IsUserExcluded, Converter={StaticResource InverseBooleanConverter}}">
                                                    <Button.Style>
                                                        <Style TargetType="Button">
                                                            <Setter Property="Background" Value="{DynamicResource ExcludeButtonBackgroundColor}"/>
                                                            <Setter Property="Foreground" Value="{DynamicResource ExcludeButtonForegroundColor}"/>
                                                            <Style.Triggers>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Background" Value="{DynamicResource ExcludeButtonDisabledBackgroundColor}"/>
                                                                    <Setter Property="Foreground" Value="{DynamicResource ExcludeButtonDisabledForegroundColor}"/>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                </Button>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ListItemHoverBackgroundColor}"/>
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ListItemSelectionBackgroundColor}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource ListItemSelectionForegroundColor}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </DockPanel>

            <!-- Included/Excluded Lists -->
            <Grid Grid.Column="4">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>   <!-- Included Header -->
                    <RowDefinition Height="*"/>      <!-- Included ListBox -->
                    <RowDefinition Height="Auto"/>   <!-- Included Add Controls -->
                    <RowDefinition Height="20"/>     <!-- Spacer -->
                    <RowDefinition Height="Auto"/>   <!-- Excluded Header -->
                    <RowDefinition Height="*"/>      <!-- Excluded ListBox -->
                    <RowDefinition Height="Auto"/>   <!-- Excluded Add Controls -->
                </Grid.RowDefinitions>

                <!-- Included Words -->
                <DockPanel Grid.Row="0">
                    <Button DockPanel.Dock="Right" x:Name="ClearIncludedWordsButton" Content="Clear" Padding="5,2" Margin="5,0,0,5" Click="ClearIncludedWordsButton_Click" Background="{DynamicResource ButtonBackgroundColor}" Foreground="{DynamicResource ButtonForegroundColor}"/>
                    <TextBlock Text="Included Words:" FontWeight="SemiBold" Margin="0,0,0,5" Foreground="{DynamicResource TextForegroundColor}"/>
                </DockPanel>
                <ListBox Grid.Row="1" x:Name="IncludedWordsListBox" MouseDoubleClick="IncludedWordsListBox_MouseDoubleClick"
                         Background="{DynamicResource ControlBackgroundColor}" Foreground="{DynamicResource TextForegroundColor}" BorderBrush="{DynamicResource BorderColorBrush}"/>
                <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="0,5,0,0">
                    <TextBox x:Name="NewIncludedWordTextBox" Width="120" Margin="0,0,5,0" 
                             Background="{DynamicResource TextBoxBackgroundColor}" 
                             Foreground="{DynamicResource TextBoxForegroundColor}" 
                             BorderBrush="{DynamicResource BorderColorBrush}"/>
                    <Button x:Name="AddIncludedWordButton" Content="Add" Padding="10,2" Click="AddIncludedWordButton_Click" Background="{DynamicResource ButtonBackgroundColor}" Foreground="{DynamicResource ButtonForegroundColor}"/>
                </StackPanel>

                <!-- Excluded Words -->
                <DockPanel Grid.Row="4" Margin="0,10,0,0">
                    <Button DockPanel.Dock="Right" x:Name="ClearExcludedWordsButton" Content="Clear" Padding="5,2" Margin="5,0,0,5" Click="ClearExcludedWordsButton_Click" Background="{DynamicResource ButtonBackgroundColor}" Foreground="{DynamicResource ButtonForegroundColor}"/>
                    <TextBlock Text="Excluded Words:" FontWeight="SemiBold" Margin="0,0,0,5" Foreground="{DynamicResource TextForegroundColor}"/>
                </DockPanel>
                <ListBox Grid.Row="5" x:Name="ExcludedWordsListBox" MouseDoubleClick="ExcludedWordsListBox_MouseDoubleClick"
                         Background="{DynamicResource ControlBackgroundColor}" Foreground="{DynamicResource TextForegroundColor}" BorderBrush="{DynamicResource BorderColorBrush}"/>
                <StackPanel Grid.Row="6" Orientation="Horizontal" Margin="0,5,0,0">
                    <TextBox x:Name="NewExcludedWordTextBox" Width="120" Margin="0,0,5,0" 
                             Background="{DynamicResource TextBoxBackgroundColor}" 
                             Foreground="{DynamicResource TextBoxForegroundColor}" 
                             BorderBrush="{DynamicResource BorderColorBrush}"/>
                    <Button x:Name="AddExcludedWordButton" Content="Add" Padding="10,2" Click="AddExcludedWordButton_Click" Background="{DynamicResource ButtonBackgroundColor}" Foreground="{DynamicResource ButtonForegroundColor}"/>
                </StackPanel>
            </Grid>
        </Grid>

        <!-- Status Bar -->
        <StatusBar Grid.Row="2" VerticalAlignment="Bottom" Background="{DynamicResource StatusBarBackgroundColor}">
            <StatusBarItem>
                <TextBlock x:Name="StatusBarText" Text="Ready" Foreground="{DynamicResource StatusBarForegroundColor}"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
